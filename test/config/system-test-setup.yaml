apiVersion: apps/v1
kind: Deployment
metadata:
  name: smee-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: in-cluster-smee
  template:
    metadata:
      labels:
        app: in-cluster-smee
    spec:
      containers:
        - image: "ghcr.io/chmouel/gosmee:v0.26.0"
          imagePullPolicy: IfNotPresent
          name: gosmee
          args: ["server", "--address", "0.0.0.0"]
          ports:
            - name: "gosmee-http"
              containerPort: 3333
              protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: smee-server-service
spec:
  selector:
    app: in-cluster-smee
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3333
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: smee-client
spec:
  replicas: 1
  selector:
    matchLabels:
      app: smee-sidecar
  template:
    metadata:
      labels:
        app: smee-sidecar
    spec:
      containers:
        - name: gosmee-client
          image: ghcr.io/chmouel/gosmee:v0.26.0
          args:
            - client
            - http://smee-server-service.default.svc.cluster.local/smeehealthcheckchannel
            - http://localhost:8080
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /healthz
              port: 9100 # The sidecar's management port
            initialDelaySeconds: 5
            periodSeconds: 3
            timeoutSeconds: 2
            failureThreshold: 2
          ports:
            - containerPort: 8081
              name: health
              protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 32Mi
            requests:
              cpu: 10m
              memory: 32Mi
          securityContext:
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - name: sidecar
          # image: quay.io/konflux-ci/smee-sidecar:latest
          image: smee-sidecar-test:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 9100
              name: metrics
              protocol: TCP
          env:
            - name: DOWNSTREAM_SERVICE_URL
              # This should point to the actual application you are proxying to.
              # For testing, it can be a placeholder if you're only testing healthz.
              value: "http://some-downstream-app.default.svc.cluster.local:8080"
            - name: SMEE_CHANNEL_URL
              # This points to our in-cluster Smee server via its Service DNS name.
              value: "http://smee-server-service.default.svc.cluster.local/smeehealthcheckchannel"
          # The liveness probe to test the /healthz endpoint and trigger restarts.
          livenessProbe:
            httpGet:
              path: /healthz
              port: 9100 # The sidecar's management port
            # Aggressive timing for fast test feedback.
            initialDelaySeconds: 5
            periodSeconds: 3
            timeoutSeconds: 2
            failureThreshold: 2
